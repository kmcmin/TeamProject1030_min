

drop table TB_USER;
CREATE TABLE TB_USER(
    USER_NO NUMBER primary key, --CREATE SEQUENCE TB_USER_SEQ;
    USER_NAME VARCHAR2(30), 
    USER_PW VARCHAR2(100), 
    USER_PHONE varchar2(20), 
    USER_POST NUMBER,
    USER_ADDRESS1 VARCHAR2(100),
    USER_ADDRESS2 VARCHAR2(100),
    USER_ADDRESS3 VARCHAR2(100),
    USER_STATUS VARCHAR2(2) default 'y' , -- 회원상태 
    USER_ID VARCHAR2(30),
    USER_EMAIL VARCHAR2(100),
    USER_REF VARCHAR2(30), -- 추천인
    USER_REGDATE DATE DEFAULT SYSDATE, -- 가입일
    USER_UPDATE DATE DEFAULT SYSDATE,  --수정일
    USER_NICKNAME VARCHAR2(20),
    USER_TYPE VARCHAR(10) -- 가입타입 카카오/비회원/회원
);
CREATE SEQUENCE TB_USER_SEQ;


CREATE TABLE TB_PRODUCT(
    PRODUCT_CODE VARCHAR2(30) primary key, --상품코드 
    PRODUCT_NAME VARCHAR2(10),
    PRODUCT_IMG VARCHAR2(300), 
    PRODUCT_CONTEXT VARCHAR2(500), -- 상품설명
    PRODUCT_PRICE NUMBER, -- 상품가격
    PRODUCT_STOCK NUMBER, -- 상품재고
    CATEGORY_CODE VARCHAR2(30), -- 해당 카테고리의 코드
    PRODUCT_COMPANY VARCHAR2(30), -- 상품 제조사(판매자)
    PRODUCT_DELIP NUMBER, --배송비, 아마안쓸듯 여긴 그냥 다 무료배송
    PRODUCT_STATUS VARCHAR2(10), --상품상태 판매중/판매중단
    PRODUCT_REGDATE DATE DEFAULT SYSDATE, --상품 등록일
    PRODUCT_UPDATE DATE DEFAULT SYSDATE -- 상품 수정일
);
insert into TB_PRODUCT 
  values ('T1',	 '앨리스 데님 탑','top1','빈티지한 느낌의 데님 프릴 슬리브스 탑', 12100, 10,'001','에이콘',0,'판매중',SYSDATE,SYSDATE);

-- 잠시보류
--CREATE TABLE TB_CART(
--    CART_NO NUMBER PRIMARY KEY,
--    USER_NO NUMBER ,
--    PRODUCT_CODE VARCHAR2(30),
--    CART_COUNT NUMBER
--);



CREATE TABLE tb_coupon(
    coupon_no NUMBER(6) PRIMARY KEY, -- 쿠폰 고유번호, create SEQUENCE TB_COUPON_seq
     coupon_name VARCHAR2(50) , -- 쿠폰명
     coupon_price NUMBER(6), -- 쿠폰 가격(천원할인,...)
     coupon_info VARCHAR2(500) , -- 쿠폰 설명
     coupon_sta VARCHAR(1) , --쿠폰 사용여부
     coupon_create DATE DEFAULT SYSDATE, -- 쿠폰 생성일
     coupon_delete DATE , --쿠폰 소멸일
     coupon_usedate DATE, --쿠폰 사용일
     USER_NO NUMBER -- 쿠폰 주인이라고 생각
);
create SEQUENCE TB_COUPON_seq;


CREATE TABLE TB_LIKE (
    LIKE_NO number PRIMARY KEY, --CREATE SEQUENCE TB_LIKE_SEQ
    USER_NO NUMBER ,
    PRODUCT_CODE VARCHAR2(30)
);
CREATE SEQUENCE TB_LIKE_SEQ;



-- 잠시보류
--CREATE TABLE TB_CATEGORY (
--    CATEGORY_CODE VARCHAR2(30) PRIMARY KEY,
--    CATEGORY_TIER NUMBER ,
--    CATEGORY_NAME VARCHAR2(30) ,
--    CATEPARENT VARCHAR2(30)
--);

CREATE TABLE TB_ORDER(
    order_no NUMBER PRIMARY KEY,
    order_date DATE DEFAULT SYSDATE,
    order_post VARCHAR2(5) NOT NULL,
    order_addr1 VARCHAR2(500) NOT NULL,
    order_addr2 VARCHAR2(500) NOT NULL,
    order_receiver VARCHAR2(50) NOT NULL,
    order_phone VARCHAR2(12) NOT NULL,
    user_no number NOT NULL,
    order_sta VARCHAR2(50) NOT NULL,
    order_paysta VARCHAR2(50) NOT NULL,
    order_disprice NUMBER NOT NULL,
    order_price NUMBER NULL
);

create table TB_ORDERDETAIL
  (  odd_no NUMBER PRIMARY KEY,
     order_no NUMBER NOT NULL,
     product_code VARCHAR2(30) NOT NULL,
     odd_count NUMBER NOT NULL,
     product_price NUMBER NOT NULL
  );
  

ALTER TABLE TB_PRODUCT
ADD CONSTRAINT TB_PRODUCT_CATEGORY_CODE_FK FOREIGN KEY(CATEGORY_CODE)
REFERENCES TB_CATEGORY(CATEGORY_CODE);

ALTER TABLE TB_CART
ADD CONSTRAINT TB_CART_USER_NO_FK FOREIGN KEY(USER_NO)
REFERENCES TB_USER(USER_NO);

ALTER TABLE TB_CART
ADD CONSTRAINT TB_CART_PRODUCT_CODE_FK FOREIGN KEY(PRODUCT_CODE)
REFERENCES TB_PRODUCT(PRODUCT_CODE);




create SEQUENCE TB_ORDER_seq;

create SEQUENCE TB_ORDERDETAIL_seq;

CREATE SEQUENCE TB_CART_SEQ;

alter table TB_ORDERDETAIL
add CONSTRAINT TB_ORDERDETAIL_order_no_fk FOREIGN KEY(order_no)
REFERENCES TB_ORDER(order_no);


--FAQ 테이블 생성
CREATE TABLE TB_FAQ(
   FAQ_NO NUMBER primary key,
    FAQ_TYPE VARCHAR2(50),
    FAQ_TITLE VARCHAR2(150) NOT NULL,
    FAQ_CONTENT VARCHAR2(1000)NOT NULL, 
    FAQ_DELDATE DATE DEFAULT SYSDATE
);

create SEQUENCE TB_FAQ_seq nocache;

commit;


